[33mcommit f48d879664358ee29cf739dfdc4d9a1e6c76e77d[m[33m ([m[1;36mHEAD -> [m[1;32mwork[m[33m, [m[1;31morigin/work[m[33m)[m
Author: Alex Silva <9apsilva@gmail.com>
Date:   Sat Mar 12 00:48:32 2022 -0300

    routes of posts

[1mdiff --git a/components/home.jsx b/components/home.jsx[m
[1mindex a6bf2ff..581de41 100644[m
[1m--- a/components/home.jsx[m
[1m+++ b/components/home.jsx[m
[36m@@ -29,7 +29,7 @@[m [mexport default function Home() {[m
                     </div>[m
                 }[m
                 <div className={styles.content}>[m
[31m-                    <div className={styles.h1}><RichText render={dataSection.title} /></div>[m
[32m+[m[32m                    <div className={styles.h1} ><RichText render={dataSection.title} /></div>[m
                      <div className={styles.p}><RichText render={dataSection.content} /></div> [m
                 </div>[m
             </section>[m
[1mdiff --git a/components/homeBlogPosts.jsx b/components/homeBlogPosts.jsx[m
[1mnew file mode 100644[m
[1mindex 0000000..e443c06[m
[1m--- /dev/null[m
[1m+++ b/components/homeBlogPosts.jsx[m
[36m@@ -0,0 +1,52 @@[m
[32m+[m[32mimport styles from '../styles/PostsCenter.module.css'[m
[32m+[m[32mimport Image from 'next/image'[m
[32m+[m[32mimport { RichText } from "prismic-reactjs"[m
[32m+[m[32mimport Link from 'next/link'[m
[32m+[m[32mimport { useRouter } from 'next/router'[m
[32m+[m
[32m+[m[32mexport default function HomeBlogPosts({ allPosts }) {[m
[32m+[m[32m    const router = useRouter()[m
[32m+[m
[32m+[m[32m    return ([m
[32m+[m[32m        <div className={styles.layout_posts}>[m
[32m+[m[32m            {!router.isFallback ? <>[m
[32m+[m[32m                <article className={styles.destaque}>[m
[32m+[m[32m                    <Image[m
[32m+[m[32m                        src={allPosts[0].data.image.url}[m
[32m+[m[32m                        alt='image destaque'[m
[32m+[m[32m                        height={1000}[m
[32m+[m[32m                        width={1000}[m
[32m+[m[32m                    />[m
[32m+[m[32m                    <div><RichText render={allPosts[0].tags[0]} /></div>[m
[32m+[m[32m                    <div><RichText render={allPosts[0].data.name} /></div>[m
[32m+[m[32m                    <div><RichText render={allPosts[0].data.content} /></div>[m
[32m+[m[32m                </article>[m
[32m+[m
[32m+[m[32m                <nav className={styles.nav_side}>[m
[32m+[m[32m                    {[m
[32m+[m[32m                        allPosts.map((item) => {[m
[32m+[m[32m                            return ([m
[32m+[m[32m                                <ul key={item.uid} className={styles.ul}>[m
[32m+[m[32m                                    <li><RichText render={item.data.name} /></li>[m
[32m+[m[32m                                    <li className={styles.img} style={{ cursor: 'pointer' }}>[m
[32m+[m[32m                                        <Link href={`/post/${item.uid}`}>[m
[32m+[m[32m                                            <Image[m
[32m+[m[32m                                                loading='lazy'[m
[32m+[m[32m                                                alt={`imagem para ${item.uid}`}[m
[32m+[m[32m                                                src={item.data.image.url}[m
[32m+[m[32m                                                width={300}[m
[32m+[m[32m                                                height={300}[m
[32m+[m[32m                                            />[m
[32m+[m[32m                                        </Link>[m
[32m+[m[32m                                    </li>[m
[32m+[m[32m                                    <li>{item.tags[0]}</li>[m
[32m+[m[32m                                </ul>[m
[32m+[m[32m                            )[m
[32m+[m[32m                        })[m
[32m+[m[32m                    }[m
[32m+[m[32m                </nav>[m
[32m+[m[32m            </> : <div>loading...</div>[m
[32m+[m[32m            }[m
[32m+[m[32m        </div>[m
[32m+[m[32m    )[m
[32m+[m[32m}[m
[1mdiff --git a/components/postsCenter.jsx b/components/postsCenter.jsx[m
[1mindex a959ed3..597aca6 100644[m
[1m--- a/components/postsCenter.jsx[m
[1m+++ b/components/postsCenter.jsx[m
[36m@@ -1,42 +1,71 @@[m
[32m+[m[32mimport Head from "next/head";[m
 import styles from '../styles/PostsCenter.module.css'[m
 import Image from 'next/image'[m
 import { RichText } from "prismic-reactjs"[m
[32m+[m[32mimport Link from 'next/link'[m
[32m+[m[32mimport { useRouter } from 'next/router'[m
[32m+[m[32mimport { useCallback, useEffect, useState } from 'react'[m
[32m+[m[32mimport { getByUid } from '../prismic/query'[m
[32m+[m
[32m+[m[32mexport default function PostsCenter({ allPosts, post }) {[m
[32m+[m[32m    const router = useRouter()[m
[32m+[m
[32m+[m[32m    const [infoAllPosts, setInfoAllPosts] = useState([])[m
[32m+[m[32m    const [dataHighLights, setDataHighLights] = useState([])[m
[32m+[m
[32m+[m[32m    useEffect(() => {[m
[32m+[m[32m        const getData = async () => {[m
[32m+[m[32m            const dataAllPosts = await getByUid(allPosts)[m
[32m+[m[32m            setInfoAllPosts(dataAllPosts);[m
[32m+[m[32m            const dataOnePost = await getByUid([post])[m
[32m+[m[32m            setDataHighLights(dataOnePost)[m
[32m+[m
[32m+[m[32m        }[m
[32m+[m[32m        getData()[m
[32m+[m[32m    }, [])[m
 [m
[31m-export default function PostsCenter({ info }) {[m
     return ([m
[31m-        <div className={styles.layout_posts}>[m
[31m-            <article className={styles.destaque}>[m
[31m-                <Image[m
[31m-                    src={info[0].data.image.url} [m
[31m-                    alt='image destaque'[m
[31m-                    height={1000}[m
[31m-                    width={1000}[m
[31m-                />[m
[31m-                <div><RichText render={info[0].data.name} /></div>[m
[31m-                <div><RichText render={info[0].data.content} /></div>[m
[31m-            </article>[m
[32m+[m[32m        <>[m
[32m+[m[32m            <Head>{`e.vearte - ${dataHighLights[0]?.uid}`}</Head>[m
[32m+[m[32m            {dataHighLights[0] &&[m
[32m+[m[32m                <div className={styles.layout_posts}>[m
[32m+[m[32m                    <article className={styles.destaque}>[m
[32m+[m[32m                        <Image[m
[32m+[m[32m                            src={dataHighLights[0].data.image.url}[m
[32m+[m[32m                            alt='image destaque'[m
[32m+[m[32m                            height={1000}[m
[32m+[m[32m                            width={1000}[m
[32m+[m[32m                        />[m
[32m+[m[32m                        <div><RichText render={dataHighLights[0].tags[0]} /></div>[m
[32m+[m[32m                        <div><RichText render={dataHighLights[0].data.name} /></div>[m
[32m+[m[32m                        <div><RichText render={dataHighLights[0].data.content} /></div>[m
 [m
[31m-            <nav className={styles.nav_side}>[m
[31m-                {[m
[31m-                    info.map((item) => {[m
[31m-                        return ([m
[31m-                            <ul key={item.uid} className={styles.ul}>[m
[31m-                                <li><RichText render={item.data.name} /></li>[m
[31m-                                <li className={styles.img}>[m
[31m-                                    <Image[m
[31m-                                        loading='lazy'[m
[31m-                                        alt={`imagem para ${item.uid}`}[m
[31m-                                        src={item.data.image.url}[m
[31m-                                        width={300}[m
[31m-                                        height={300}[m
[31m-                                    />[m
[31m-                                    <li>{item.tags[0]}</li>[m
[31m-                                </li>[m
[31m-                            </ul>[m
[31m-                        )[m
[31m-                    })[m
[31m-                }[m
[31m-            </nav>[m
[31m-        </div>[m
[32m+[m[32m                    </article>[m
[32m+[m[32m                    <nav className={styles.nav_side}>[m
[32m+[m[32m                        {[m
[32m+[m[32m                            infoAllPosts.map((item) => {[m
[32m+[m[32m                                return ([m
[32m+[m[32m                                    <ul key={item.uid} className={styles.ul}>[m
[32m+[m[32m                                        <li><RichText render={item.data.name} /></li>[m
[32m+[m[32m                                        <li className={styles.img} style={{ cursor: 'pointer' }}>[m
[32m+[m[32m                                            <Link href={`/post/${item.uid}`}>[m
[32m+[m[32m                                                <Image[m
[32m+[m[32m                                                    loading='lazy'[m
[32m+[m[32m                                                    alt={`imagem para ${item.uid}`}[m
[32m+[m[32m                                                    src={item.data.image.url}[m
[32m+[m[32m                                                    width={300}[m
[32m+[m[32m                                                    height={300}[m
[32m+[m[32m                                                />[m
[32m+[m[32m                                            </Link>[m
[32m+[m[32m                                        </li>[m
[32m+[m[32m                                        <li>{item.tags[0]}</li>[m
[32m+[m[32m                                    </ul>[m
[32m+[m[32m                                )[m
[32m+[m[32m                            })[m
[32m+[m[32m                        }[m
[32m+[m[32m                    </nav>[m
[32m+[m[32m                </div>[m
[32m+[m[32m            }[m
[32m+[m[32m        </>[m
     )[m
 }[m
[1mdiff --git a/pages/artes/[uid].jsx b/pages/artes/[uid].jsx[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/pages/blog.jsx b/pages/blog.jsx[m
[1mindex 1201cd3..5a982d5 100644[m
[1m--- a/pages/blog.jsx[m
[1m+++ b/pages/blog.jsx[m
[36m@@ -1,7 +1,7 @@[m
 import Head from 'next/head'[m
 import Layout from '../components/layout'[m
[31m-import PostsCenter from '../components/postsCenter'[m
[31m-import { getAllInPosts } from "../prismic/query"[m
[32m+[m[32mimport HomeBlogPosts from '../components/homeBlogPosts'[m
[32m+[m[32mimport { getAllInDocument } from "../prismic/query"[m
 [m
 export default function Blog({ dataPosts }) {[m
 [m
[36m@@ -9,14 +9,14 @@[m [mexport default function Blog({ dataPosts }) {[m
         <>[m
             <Layout>[m
                 <Head><title>e.vearte - Blog</title></Head>[m
[31m-                <PostsCenter info={dataPosts} />[m
[32m+[m[32m                <HomeBlogPosts allPosts={dataPosts} />[m
             </Layout>[m
         </>[m
     )[m
 }[m
 [m
 export const getServerSideProps = async () => {[m
[31m-    const dataPosts = await getAllInPosts();[m
[32m+[m[32m    const dataPosts = await getAllInDocument('posts');[m
 [m
     return {[m
         props: { dataPosts }[m
[1mdiff --git a/pages/post/[uid].jsx b/pages/post/[uid].jsx[m
[1mnew file mode 100644[m
[1mindex 0000000..57a8da3[m
[1m--- /dev/null[m
[1m+++ b/pages/post/[uid].jsx[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32mimport PostsCenter from "../../components/postsCenter";[m
[32m+[m[32mimport { getAllInDocument } from "../../prismic/query";[m
[32m+[m
[32m+[m[32mexport default function Posts({allPostsUid, postUid}) {[m
[32m+[m[32m    return ([m
[32m+[m[32m        <>[m
[32m+[m[32m            <PostsCenter allPosts={allPostsUid} post={postUid}/>[m
[32m+[m[32m        </>[m
[32m+[m[32m    )[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport async function getServerSideProps({ params }) {[m
[32m+[m[32m    const res = await getAllInDocument('posts');[m
[32m+[m
[32m+[m[32m    let allPostsUid = [][m
[32m+[m[32m    res.map(item => allPostsUid.push(item.uid))[m
[32m+[m[32m    const postUid = allPostsUid.find(item => item === params.uid)[m
[32m+[m[32m    allPostsUid =   allPostsUid.filter(item => item !== postUid)[m
[32m+[m[41m    [m
[32m+[m[32m    return {[m
[32m+[m[32m        props: { allPostsUid, postUid }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/prismic/query.js b/prismic/query.js[m
[1mindex 1f09377..a45aa75 100644[m
[1m--- a/prismic/query.js[m
[1m+++ b/prismic/query.js[m
[36m@@ -8,8 +8,8 @@[m [mexport const getAllInDocument = async(fieldToFetch) => {[m
     const { results } = await client.query(Prismic.Predicates.at('document.type', fieldToFetch));[m
     return results;[m
 }[m
[31m-[m
[31m-export const getAllInPosts = async () =>{[m
[31m-    const { results } = await client.query(Prismic.Predicates.at('document.type', 'posts'));[m
[31m-    return results;[m
[32m+[m[32m//YAGNI *--*[m
[32m+[m[32mexport const getByUid = async (postsByUid)=>{[m
[32m+[m[32m    const { results } = await client.query(Prismic.Predicates.any('my.posts.uid', postsByUid))[m
[32m+[m[32m    return results[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/styles/PostsCenter.module.css b/styles/PostsCenter.module.css[m
[1mindex fbfd235..5ee5f07 100644[m
[1m--- a/styles/PostsCenter.module.css[m
[1m+++ b/styles/PostsCenter.module.css[m
[36m@@ -16,6 +16,7 @@[m
 [m
 .layout_posts .ul > li {[m
     list-style: none;[m
[32m+[m[32m    font-size: 1.5rem;[m
 }[m
 [m
 @media (max-width:600px) {[m
